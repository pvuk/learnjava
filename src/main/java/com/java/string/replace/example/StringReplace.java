package com.java.string.replace.example;

import lombok.extern.slf4j.Slf4j;

@Slf4j
public class StringReplace {
	
	public static void main(String[] args) {
		String str = "select * from ( SELECT ROW_NUMBER () OVER(ORDER BY a.TITLE_STATUS_ID  ASC,a.CURRENT_TITLE  ASC) ROWVAL ,a.* FROM ( SELECT DISTINCT TLM.TITLE_LIST_MAP_ID, TLM.TITLE_LIST_ID, TLM.WINDOW_NUMBER, TLM.CPS, TLM.LICENSE_START_DATE, TLM.SERVICE_DATE, TLM.MAX_EXHIBITION_DAYS, TLM.USER_COMMENT, TLM.MAX_EXHIBITIONS_PER_DAY, TLM.LICENSE_END_DATE, TLM.MAX_FEE, TLM.CURRENT_AVG_SUBSCRIBER_COUNT, TLM.LICENSE_RULE_OVERRIDE, TLM.MONTHS, TLM.DAYS, nvl(TLM.EPISODES,STV.INT_EPISODE_COUNT) EPISODES, TLM.RUNS, TLM.TELECASTS_PER_RUN, TLM.TOTAL_TELECASTS, TLM.REPEATS, TLM.PAYMENT_RULE_OVERRIDE, TLM.TENTATIVE, TLM.TENTATIVE_REVENUE, TLM.REPEATS_COMMENT, TLM.LICENSE_CLEARED, TLM.MATERIAL_M_AND_E, TLM.MATERIAL_VIDEO, TLM.MATERIAL_COMMENT, TLM.MATERIAL_DELIVERY_ID, TLM.SHIP_DATE, TLM.WAYBILL, TLM.TITLE_LIST_MAP_TYPE_ID, TLM.VOLUME_DEAL_OVERRIDE, TLM.VOLUME_DEAL_TYPE, TLM.INCLUDE_IN_CONFLICT_CHECKING, TLM.DIST_RIGHTS_CHECK_REQUIRED, TLM.SEASON_NUMBER, TLM.NO_MATERIALS_REQUIRED, TLM.LICENSE_CHECK, TLM.TITLE_LIST_CATEGORY_ID, TLM.TITLE_LIST_SUB_CATEGORY_ID, TLM.BILLING_UNIT_ID, TLM.TITLE_STATUS_ID, TLM.RESERVATION_STATUS_ID, TLM.RESERVATION_STATUS_BY, TLM.PRODUCT_ID, TLM.CONTRACT_MEDIA_MARKET_ID, TLM.SLATE_TITLE_ID, TLM.RIGHTS_OVERRIDE_ID, TLM.EOM_SERVICING_NOT_REQUIRED, TLM.GL_COUNTRY_ID, TLM.PARENT_ID, TLM.VERSION_ID, TLM.COMMITMENT_ENABLED, TLM.COMMITMENT_YEAR, TLM.COMMITMENT_ANNUAL_PERCENT, TLM.COMMITMENT_COMMENTS, TLM.COMMITMENT_TYPE_ID, TLM.BROADCAST_MTRL_DLVRY_RULE_ID, TLM.CREATE_DATE, TLM.CREATE_NAME, TLM.UPDATE_DATE, TLM.UPDATE_NAME, TLM.RECOGNIZE_REV_FLAG, TLM.SERVICING_OVERRIDE, TLM.RECOGNIZE_REV_UPDATE_DATE, TLM.RECOGNIZE_REV_UPDATE_NAME, TV.CURRENT_TITLE, TV.PRODUCTION_YEAR, TV.RUN_TIME, TV.TITLE_ID, TV.PRODUCT_TYPE_CODE, TV.BLACK_WHITE_IND, TV.DIVISION_CODE, TV.DIVISION_DESCRIPTION, TV.DOMESTIC_EPISODE_COUNT, TV.EPISODE_NUMBER, TV.INT_EPISODE_COUNT, TV.INT_PRODUCT_TYPE_CODE, TV.LIFECYCLE_STATUS_CODE, TV.PROJECT_TYPE_CODE, TV.RELEASE_YEAR, TV.TITLE_TYPE_CODE, TV.TVD_SALES_EPISODE_COUNT, TV.WPR_PRODUCT_ID, TV.EPISODE_TITLE, TV.SEASON_NUMBER TV_SEASON_NUMBER \r\n" + 
				"FROM   TITLE_LIST_MAP TLM, TITLE_V TV \r\n" + 
				"WHERE  TLM.PRODUCT_ID = TV.PRODUCT_ID (+) \r\n" + 
				"AND    TLM.title_list_id = 633334 \r\n" + 
				"AND    TLM.TITLE_STATUS_ID in ( 2 ) \r\n" + 
				"AND    TLM.TITLE_LIST_MAP_TYPE_ID <> 3 ) a )  WHERE ROWVAL BETWEEN 1 AND 50";
		log.info("Query - Before replace with \\r \\n: {}", str);
		log.info("Query - After replace with \\r \\n: {}", str.replace("\r\n", ""));
	}
}
